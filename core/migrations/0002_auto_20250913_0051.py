# Generated by Django 5.2.6 on 2025-09-13 00:51

from django.db import migrations


def create_public_tenant(apps, schema_editor):
    """Create the public tenant and localhost domain"""
    Client = apps.get_model('core', 'Client')
    Domain = apps.get_model('core', 'Domain')
    
    # Create public tenant if it doesn't exist
    public_tenant, created = Client.objects.get_or_create(
        schema_name='public',
        defaults={
            'name': 'Public Schema',
        }
    )
    
    if created:
        print(f"Created public tenant: {public_tenant}")
    
    # Create localhost domain if it doesn't exist
    localhost_domain, created = Domain.objects.get_or_create(
        domain='localhost',
        defaults={
            'tenant': public_tenant,
            'is_primary': True,
        }
    )
    
    if created:
        print(f"Created localhost domain: {localhost_domain}")


def reverse_create_public_tenant(apps, schema_editor):
    """Remove the public tenant and localhost domain"""
    Client = apps.get_model('core', 'Client')
    Domain = apps.get_model('core', 'Domain')
    
    # Remove localhost domain
    Domain.objects.filter(domain='localhost').delete()
    
    # Remove public tenant (only if it's safe to do so)
    # Note: In production, you might not want to delete the public schema
    Client.objects.filter(schema_name='public').delete()


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(
            create_public_tenant,
            reverse_create_public_tenant,
        ),
    ]
