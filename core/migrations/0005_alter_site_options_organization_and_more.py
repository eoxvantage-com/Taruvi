# Generated by Django 5.2.6 on 2025-10-02 15:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0004_add_basemodel_fields"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # First rename Client to Site so we can reference it properly
        migrations.RenameModel(
            old_name="Client",
            new_name="Site",
        ),
        # Now we can alter the Site model options
        migrations.AlterModelOptions(
            name="Site",
            options={
                "permissions": [
                    ("access_site", "Can access site"),
                    ("manage_site_users", "Can manage site users"),
                    ("admin_site", "Can administer site"),
                ]
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this record was created"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="When this record was last updated"
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Organization name", max_length=200),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-friendly organization identifier",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Organization description", null=True
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True, help_text="Organization website", null=True
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="Organization phone",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Organization contact email",
                        max_length=254,
                        null=True,
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        blank=True, help_text="Organization address", null=True
                    ),
                ),
                (
                    "subscription_plan",
                    models.CharField(
                        choices=[
                            ("free", "Free"),
                            ("basic", "Basic"),
                            ("professional", "Professional"),
                            ("enterprise", "Enterprise"),
                        ],
                        default="free",
                        help_text="Current subscription plan",
                        max_length=50,
                    ),
                ),
                (
                    "max_sites",
                    models.PositiveIntegerField(
                        default=1, help_text="Maximum sites allowed"
                    ),
                ),
                (
                    "max_members",
                    models.PositiveIntegerField(
                        default=5, help_text="Maximum members allowed"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Organization is active"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False, help_text="Organization is verified"
                    ),
                ),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                (
                    "settings",
                    models.JSONField(
                        blank=True, default=dict, help_text="Organization settings"
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        help_text="User this record is assigned to",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this record",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified this record",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="modified_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Organization",
                "verbose_name_plural": "Organizations",
                "permissions": [
                    ("manage_organization", "Can manage organization"),
                    ("invite_members", "Can invite members to organization"),
                    ("manage_sites", "Can manage organization sites"),
                ],
            },
        ),
        migrations.CreateModel(
            name="OrganizationInvitation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this record was created"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="When this record was last updated"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email address of invited user", max_length=254
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("member", "Member"), ("owner", "Owner")],
                        default="member",
                        help_text="Role to assign when invitation is accepted",
                        max_length=20,
                    ),
                ),
                (
                    "token",
                    models.CharField(
                        help_text="Invitation token", max_length=64, unique=True
                    ),
                ),
                (
                    "is_accepted",
                    models.BooleanField(
                        default=False, help_text="Invitation has been accepted"
                    ),
                ),
                (
                    "accepted_at",
                    models.DateTimeField(
                        blank=True, help_text="When invitation was accepted", null=True
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(help_text="When invitation expires"),
                ),
                (
                    "message",
                    models.TextField(
                        blank=True, help_text="Personal message from inviter", null=True
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional invitation metadata",
                    ),
                ),
                (
                    "accepted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who accepted invitation",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="accepted_invitations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        help_text="User this record is assigned to",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this record",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "invited_by",
                    models.ForeignKey(
                        help_text="User who sent the invitation",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_invitations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified this record",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="modified_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization to invite user to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invitations",
                        to="core.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Organization Invitation",
                "verbose_name_plural": "Organization Invitations",
            },
        ),
        migrations.CreateModel(
            name="OrganizationMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this record was created"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="When this record was last updated"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("member", "Member"), ("owner", "Owner")],
                        default="member",
                        help_text="Role in organization",
                        max_length=20,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, help_text="Job title", max_length=100, null=True
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True, help_text="Department", max_length=100, null=True
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, help_text="Phone number", max_length=20, null=True
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, help_text="Member is active"),
                ),
                (
                    "joined_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When user joined"
                    ),
                ),
                (
                    "last_active",
                    models.DateTimeField(
                        blank=True, help_text="Last activity time", null=True
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        help_text="User this record is assigned to",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this record",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified this record",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="modified_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="core.organization",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="organization_memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Organization Member",
                "verbose_name_plural": "Organization Members",
            },
        ),
        migrations.CreateModel(
            name="OrganizationSite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this record was created"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="When this record was last updated"
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False, help_text="Primary site for organization"
                    ),
                ),
                (
                    "site_role",
                    models.CharField(
                        choices=[
                            ("production", "Production"),
                            ("staging", "Staging"),
                            ("development", "Development"),
                            ("testing", "Testing"),
                        ],
                        default="production",
                        help_text="Site environment role",
                        max_length=50,
                    ),
                ),
                (
                    "site_settings",
                    models.JSONField(
                        blank=True, default=dict, help_text="Site-specific settings"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, help_text="Site is active"),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        help_text="User this record is assigned to",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who created this record",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who last modified this record",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="modified_%(class)s_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization that owns this site",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="organization_sites",
                        to="core.organization",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        help_text="Tenant site",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="organization_sites",
                        to="core.site",
                    ),
                ),
            ],
            options={
                "verbose_name": "Organization Site",
                "verbose_name_plural": "Organization Sites",
            },
        ),
        migrations.DeleteModel(
            name="SiteAuthConfig",
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(fields=["slug"], name="core_organi_slug_517c11_idx"),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["is_active", "is_verified"],
                name="core_organi_is_acti_9ec1fd_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="organizationinvitation",
            index=models.Index(fields=["token"], name="core_organi_token_cd3e2d_idx"),
        ),
        migrations.AddIndex(
            model_name="organizationinvitation",
            index=models.Index(
                fields=["email", "is_accepted"], name="core_organi_email_14743b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organizationinvitation",
            index=models.Index(
                fields=["expires_at"], name="core_organi_expires_7843e2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organizationinvitation",
            index=models.Index(
                fields=["organization", "is_accepted"],
                name="core_organi_organiz_fe4287_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="organizationinvitation",
            unique_together={("organization", "email")},
        ),
        migrations.AddIndex(
            model_name="organizationmember",
            index=models.Index(
                fields=["organization", "role"], name="core_organi_organiz_99a70a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organizationmember",
            index=models.Index(
                fields=["user", "is_active"], name="core_organi_user_id_f7518b_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="organizationmember",
            unique_together={("organization", "user")},
        ),
        migrations.AddIndex(
            model_name="organizationsite",
            index=models.Index(
                fields=["organization", "is_active"],
                name="core_organi_organiz_885c2c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="organizationsite",
            index=models.Index(
                fields=["site", "is_active"], name="core_organi_site_id_13fd97_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="organizationsite",
            unique_together={("organization", "site")},
        ),
    ]
